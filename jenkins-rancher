def datestring=new Date().toString().replaceAll(" ","").minus('CST').getAt(3..-1).replaceAll(":","").toLowerCase()
def harborurl='172.16.0.146/soy/cs/csa'
pipeline{
    agent none
    options{
        disableConcurrentBuilds()
        skipDefaultCheckout()
        timeout(time: 1, unit: 'HOURS')
        timestamps()
    }
    parameters{
        string(name: 'other', defaultValue: 'among中文', description: '请输入中文')
        gitParameter name: 'brancename', type: 'PT_BRANCH_TAG',branchFilter: 'origin/(.*)',defaultValue: 'branch_dev',selectedValue: 'DEFAULT',sortMode: 'DESCENDING_SMART',description: 'Select your branch or tag.'
        booleanParam(name: 'deploy', defaultValue: true, description: '是否发布')   
        choice(description: '选择集群 ?',name: 'k8scluster',choices: ['hot-dev', 'Module2', 'Module3'])
        choice(description: '选择namespace ?',name: 'namespace',choices: ['general', 'test', 'prod'])
    }																				
    stages{
    stage('build stage')
    {
       agent any
       steps
       {
            withEnv(['PATH+EXTRA=/usr/sbin:/usr/bin:/sbin:/bin']){sh "ls && pwd"}
            checkout([$class: 'GitSCM',branches: [[name: "${params.brancename}"]],doGenerateSubmoduleConfigurations: false, extensions: [], gitTool: 'Default', submoduleCfg: [],userRemoteConfigs: [[url: 'https://git.whoot.com/ingcreations-plateform/account-golang.git',credentialsId: 'jenkinsfile',]] ])
            sh 'export GOPATH=${WORKSPACE}/.. && PATH=${GOPATH}:$PATH && /usr/local/go1.16/bin/go get -u github.com/ingcreations-dev/gokits && /usr/local/go1.16/bin/go get -d -v ./... && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 /usr/local/go1.16/bin/go build -o account application.go'
            script
            {   
                
                println(datestring)
                sh 'docker login -u admin -p Harbor12345 172.16.0.146'
                def imgname=docker.build("${harborurl}:${datestring}","-f ./dockerfile .")
                imgname.push()
            }
       }
    }
    stage('deploy stage')
    {
        agent any
        steps
        {
            script{ sh "kubectl --kubeconfig /root/.kube/${k8scluster}  set image deployment/ingcreations-service-account ingcreations-service-account=${harborurl}:${datestring} -n ${namespace}" }
        }
    }
    stage('health stage')
    {
      agent any
      steps
       {
          echo "${params.other}"
          echo "${env.deploy}"
          echo "${params.k8scluster}---${params.namespace}"
          script{
            def sj=new Date()
            println(sj)
            if (sj=='aaaa'){ echo "${sjk}" }
            else { echo "else ${sj}---${JOB_NAME}" }
          }
       }
    }
 }
}
